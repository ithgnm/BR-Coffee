#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace brcoffee.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="brcoffee")]
	public partial class dbBRCoffeeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbill(bill instance);
    partial void Updatebill(bill instance);
    partial void Deletebill(bill instance);
    partial void Insertdrink(drink instance);
    partial void Updatedrink(drink instance);
    partial void Deletedrink(drink instance);
    partial void Insertbillinfo(billinfo instance);
    partial void Updatebillinfo(billinfo instance);
    partial void Deletebillinfo(billinfo instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertnews(news instance);
    partial void Updatenews(news instance);
    partial void Deletenews(news instance);
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    #endregion
		
		public dbBRCoffeeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["brcoffeeConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbBRCoffeeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbBRCoffeeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbBRCoffeeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbBRCoffeeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bill> bills
		{
			get
			{
				return this.GetTable<bill>();
			}
		}
		
		public System.Data.Linq.Table<drink> drinks
		{
			get
			{
				return this.GetTable<drink>();
			}
		}
		
		public System.Data.Linq.Table<billinfo> billinfos
		{
			get
			{
				return this.GetTable<billinfo>();
			}
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<news> news
		{
			get
			{
				return this.GetTable<news>();
			}
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill")]
	public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<bool> _payment;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<System.DateTime> _date;
		
		private int _idcustomer;
		
		private EntitySet<billinfo> _billinfos;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpaymentChanging(System.Nullable<bool> value);
    partial void OnpaymentChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnidcustomerChanging(int value);
    partial void OnidcustomerChanged();
    #endregion
		
		public bill()
		{
			this._billinfos = new EntitySet<billinfo>(new Action<billinfo>(this.attach_billinfos), new Action<billinfo>(this.detach_billinfos));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="Bit")]
		public System.Nullable<bool> payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcustomer", DbType="Int NOT NULL")]
		public int idcustomer
		{
			get
			{
				return this._idcustomer;
			}
			set
			{
				if ((this._idcustomer != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcustomerChanging(value);
					this.SendPropertyChanging();
					this._idcustomer = value;
					this.SendPropertyChanged("idcustomer");
					this.OnidcustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_billinfo", Storage="_billinfos", ThisKey="id", OtherKey="idbill")]
		public EntitySet<billinfo> billinfos
		{
			get
			{
				return this._billinfos;
			}
			set
			{
				this._billinfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_bill", Storage="_customer", ThisKey="idcustomer", OtherKey="id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._idcustomer = value.id;
					}
					else
					{
						this._idcustomer = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_billinfos(billinfo entity)
		{
			this.SendPropertyChanging();
			entity.bill = this;
		}
		
		private void detach_billinfos(billinfo entity)
		{
			this.SendPropertyChanging();
			entity.bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.drink")]
	public partial class drink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _idcategory;
		
		private string _picture;
		
		private string _describe;
		
		private double _price;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntitySet<billinfo> _billinfos;
		
		private EntityRef<category> _category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnidcategoryChanging(int value);
    partial void OnidcategoryChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    partial void OndescribeChanging(string value);
    partial void OndescribeChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public drink()
		{
			this._billinfos = new EntitySet<billinfo>(new Action<billinfo>(this.attach_billinfos), new Action<billinfo>(this.detach_billinfos));
			this._category = default(EntityRef<category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcategory", DbType="Int NOT NULL")]
		public int idcategory
		{
			get
			{
				return this._idcategory;
			}
			set
			{
				if ((this._idcategory != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcategoryChanging(value);
					this.SendPropertyChanging();
					this._idcategory = value;
					this.SendPropertyChanged("idcategory");
					this.OnidcategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="VarChar(50)")]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe", DbType="NVarChar(MAX)")]
		public string describe
		{
			get
			{
				return this._describe;
			}
			set
			{
				if ((this._describe != value))
				{
					this.OndescribeChanging(value);
					this.SendPropertyChanging();
					this._describe = value;
					this.SendPropertyChanged("describe");
					this.OndescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drink_billinfo", Storage="_billinfos", ThisKey="id", OtherKey="iddrink")]
		public EntitySet<billinfo> billinfos
		{
			get
			{
				return this._billinfos;
			}
			set
			{
				this._billinfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_drink", Storage="_category", ThisKey="idcategory", OtherKey="id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.drinks.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.drinks.Add(this);
						this._idcategory = value.id;
					}
					else
					{
						this._idcategory = default(int);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_billinfos(billinfo entity)
		{
			this.SendPropertyChanging();
			entity.drink = this;
		}
		
		private void detach_billinfos(billinfo entity)
		{
			this.SendPropertyChanging();
			entity.drink = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.billinfo")]
	public partial class billinfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idbill;
		
		private int _iddrink;
		
		private int _count;
		
		private System.Nullable<decimal> _price;
		
		private EntityRef<drink> _drink;
		
		private EntityRef<bill> _bill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidbillChanging(int value);
    partial void OnidbillChanged();
    partial void OniddrinkChanging(int value);
    partial void OniddrinkChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
		
		public billinfo()
		{
			this._drink = default(EntityRef<drink>);
			this._bill = default(EntityRef<bill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idbill", DbType="Int NOT NULL")]
		public int idbill
		{
			get
			{
				return this._idbill;
			}
			set
			{
				if ((this._idbill != value))
				{
					if (this._bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidbillChanging(value);
					this.SendPropertyChanging();
					this._idbill = value;
					this.SendPropertyChanged("idbill");
					this.OnidbillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iddrink", DbType="Int NOT NULL")]
		public int iddrink
		{
			get
			{
				return this._iddrink;
			}
			set
			{
				if ((this._iddrink != value))
				{
					if (this._drink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniddrinkChanging(value);
					this.SendPropertyChanging();
					this._iddrink = value;
					this.SendPropertyChanged("iddrink");
					this.OniddrinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int NOT NULL")]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drink_billinfo", Storage="_drink", ThisKey="iddrink", OtherKey="id", IsForeignKey=true)]
		public drink drink
		{
			get
			{
				return this._drink.Entity;
			}
			set
			{
				drink previousValue = this._drink.Entity;
				if (((previousValue != value) 
							|| (this._drink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._drink.Entity = null;
						previousValue.billinfos.Remove(this);
					}
					this._drink.Entity = value;
					if ((value != null))
					{
						value.billinfos.Add(this);
						this._iddrink = value.id;
					}
					else
					{
						this._iddrink = default(int);
					}
					this.SendPropertyChanged("drink");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bill_billinfo", Storage="_bill", ThisKey="idbill", OtherKey="id", IsForeignKey=true)]
		public bill bill
		{
			get
			{
				return this._bill.Entity;
			}
			set
			{
				bill previousValue = this._bill.Entity;
				if (((previousValue != value) 
							|| (this._bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bill.Entity = null;
						previousValue.billinfos.Remove(this);
					}
					this._bill.Entity = value;
					if ((value != null))
					{
						value.billinfos.Add(this);
						this._idbill = value.id;
					}
					else
					{
						this._idbill = default(int);
					}
					this.SendPropertyChanged("bill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<drink> _drinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public category()
		{
			this._drinks = new EntitySet<drink>(new Action<drink>(this.attach_drinks), new Action<drink>(this.detach_drinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_drink", Storage="_drinks", ThisKey="id", OtherKey="idcategory")]
		public EntitySet<drink> drinks
		{
			get
			{
				return this._drinks;
			}
			set
			{
				this._drinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_drinks(drink entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_drinks(drink entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fullname;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _address;
		
		private string _phonenumber;
		
		private System.Nullable<System.DateTime> _borndate;
		
		private EntitySet<bill> _bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphonenumberChanging(string value);
    partial void OnphonenumberChanged();
    partial void OnborndateChanging(System.Nullable<System.DateTime> value);
    partial void OnborndateChanged();
    #endregion
		
		public customer()
		{
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="VarChar(50)")]
		public string phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borndate", DbType="DateTime")]
		public System.Nullable<System.DateTime> borndate
		{
			get
			{
				return this._borndate;
			}
			set
			{
				if ((this._borndate != value))
				{
					this.OnborndateChanging(value);
					this.SendPropertyChanging();
					this._borndate = value;
					this.SendPropertyChanged("borndate");
					this.OnborndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_bill", Storage="_bills", ThisKey="id", OtherKey="idcustomer")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.news")]
	public partial class news : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _author;
		
		private string _source;
		
		private string _subtitle;
		
		private string _content1;
		
		private string _picture1;
		
		private string _content2;
		
		private string _picture2;
		
		private string _content3;
		
		private string _picture3;
		
		private string _topic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OnsourceChanging(string value);
    partial void OnsourceChanged();
    partial void OnsubtitleChanging(string value);
    partial void OnsubtitleChanged();
    partial void Oncontent1Changing(string value);
    partial void Oncontent1Changed();
    partial void Onpicture1Changing(string value);
    partial void Onpicture1Changed();
    partial void Oncontent2Changing(string value);
    partial void Oncontent2Changed();
    partial void Onpicture2Changing(string value);
    partial void Onpicture2Changed();
    partial void Oncontent3Changing(string value);
    partial void Oncontent3Changed();
    partial void Onpicture3Changing(string value);
    partial void Onpicture3Changed();
    partial void OntopicChanging(string value);
    partial void OntopicChanged();
    #endregion
		
		public news()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(100)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(50)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="VarChar(50)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this.OnsourceChanging(value);
					this.SendPropertyChanging();
					this._source = value;
					this.SendPropertyChanged("source");
					this.OnsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtitle", DbType="NVarChar(100)")]
		public string subtitle
		{
			get
			{
				return this._subtitle;
			}
			set
			{
				if ((this._subtitle != value))
				{
					this.OnsubtitleChanging(value);
					this.SendPropertyChanging();
					this._subtitle = value;
					this.SendPropertyChanged("subtitle");
					this.OnsubtitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content1", DbType="NVarChar(MAX)")]
		public string content1
		{
			get
			{
				return this._content1;
			}
			set
			{
				if ((this._content1 != value))
				{
					this.Oncontent1Changing(value);
					this.SendPropertyChanging();
					this._content1 = value;
					this.SendPropertyChanged("content1");
					this.Oncontent1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture1", DbType="VarChar(50)")]
		public string picture1
		{
			get
			{
				return this._picture1;
			}
			set
			{
				if ((this._picture1 != value))
				{
					this.Onpicture1Changing(value);
					this.SendPropertyChanging();
					this._picture1 = value;
					this.SendPropertyChanged("picture1");
					this.Onpicture1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content2", DbType="NVarChar(MAX)")]
		public string content2
		{
			get
			{
				return this._content2;
			}
			set
			{
				if ((this._content2 != value))
				{
					this.Oncontent2Changing(value);
					this.SendPropertyChanging();
					this._content2 = value;
					this.SendPropertyChanged("content2");
					this.Oncontent2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture2", DbType="VarChar(50)")]
		public string picture2
		{
			get
			{
				return this._picture2;
			}
			set
			{
				if ((this._picture2 != value))
				{
					this.Onpicture2Changing(value);
					this.SendPropertyChanging();
					this._picture2 = value;
					this.SendPropertyChanged("picture2");
					this.Onpicture2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content3", DbType="VarChar(MAX)")]
		public string content3
		{
			get
			{
				return this._content3;
			}
			set
			{
				if ((this._content3 != value))
				{
					this.Oncontent3Changing(value);
					this.SendPropertyChanging();
					this._content3 = value;
					this.SendPropertyChanged("content3");
					this.Oncontent3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture3", DbType="VarChar(50)")]
		public string picture3
		{
			get
			{
				return this._picture3;
			}
			set
			{
				if ((this._picture3 != value))
				{
					this.Onpicture3Changing(value);
					this.SendPropertyChanging();
					this._picture3 = value;
					this.SendPropertyChanged("picture3");
					this.Onpicture3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topic", DbType="NVarChar(50)")]
		public string topic
		{
			get
			{
				return this._topic;
			}
			set
			{
				if ((this._topic != value))
				{
					this.OntopicChanging(value);
					this.SendPropertyChanging();
					this._topic = value;
					this.SendPropertyChanged("topic");
					this.OntopicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _displayname;
		
		private string _password;
		
		private int _type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OndisplaynameChanging(string value);
    partial void OndisplaynameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    #endregion
		
		public account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayname", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string displayname
		{
			get
			{
				return this._displayname;
			}
			set
			{
				if ((this._displayname != value))
				{
					this.OndisplaynameChanging(value);
					this.SendPropertyChanging();
					this._displayname = value;
					this.SendPropertyChanged("displayname");
					this.OndisplaynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
